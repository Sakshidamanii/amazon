class Solution {
    public int numberOfWays(int startPos, int endPos, int k) {
        HashMap<Integer,HashMap<Integer,Integer>> map=new HashMap<>();
        return req(startPos,endPos,k,map);
        
    }
    public int req(int i, int j, int k, HashMap<Integer,HashMap<Integer,Integer>> map){
        
        if(k==0){ 
            if(i==j){ return 1; }
            else{ return 0; }
        }
        if(!map.containsKey(i)){        
            int mod=1000000007;
            map.put(i,new HashMap<Integer,Integer>());
            map.get(i).put(k,( (req(i+1,j,k-1,map)%mod) + (req(i-1,j,k-1,map)%mod) )%1000000007);
        }
        else{
            int mod=1000000007;
            if(!map.get(i).containsKey(k)){
                map.get(i).put(k,( (req(i+1,j,k-1,map)%mod) + (req(i-1,j,k-1,map)%mod) )%1000000007);
            } 
        }
        
        return map.get(i).get(k);
    }
}
